Problem Link:-
https://practice.geeksforgeeks.org/problems/longest-sub-array-with-sum-k0809/1?utm_source=geeksforgeeks&utm_medium=article_practice_tab&utm_campaign=article_practice_tab


Brute Force Approach:- Consider all the subarrays and find the longest with the given sum.

T.C. -> O(n^2)
S.C. -> O(1)

Solution:-
class Solution {
    // Function for finding maximum and value pair
    public static int lenOfLongSubarr (int A[], int N, int K) {
        //Complete the function
        
        int ans=0;
        
        for(int i=0;i<N;i++)
        {
            int sum=0;
            for(int j=i;j<N;j++)
            {
               sum+=A[j];
               
               if(sum==K)
               {
                   if(j-i+1>ans)
                   {
                       ans=j-i+1;
                   }
                   
               }
            }
        }
        return ans;
    }   
}


Optimal Approach:-
 public static int lenOfLongSubarr (int A[], int N, int K) {
        //Complete the function
        
        int i,j,ans;
        i=j=ans=0;
        int sum=A[0];
        
        while(j<N)
        {
            while(i<j&&sum>K)
            {
                sum-=A[i];
                i++;
            }
            
            if(sum==K)
            {
                if(ans<j-i+1)
                {
                    ans=j-i+1;
                }
            }
            
            j++;
            if(j<N)
            {
                sum+=A[j];
            }
        }
        
        return ans;
    }
