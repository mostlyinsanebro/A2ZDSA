Problem Link:-
https://practice.geeksforgeeks.org/problems/union-of-two-sorted-arrays-1587115621/1?utm_source=geeksforgeeks&utm_medium=ml_article_practice_tab&utm_campaign=article_practice_tab



Brute Force Approach:-


public class Solution {
    public static List< Integer > sortedArray(int []a, int []b) {
        // Write your code here

        HashSet<Integer> hs = new HashSet<>();

        for(int i=0;i<a.length;i++)
        {
            hs.add(a[i]);
        }

        for(int i=0;i<b.length;i++)
        {
            hs.add(b[i]);
            //System.out.println(b[i]);
        }

        ArrayList<Integer> al = new ArrayList<>();

        for(int i: hs)
        {
            al.add(i);
        }

        Collections.sort(al);
        
        return al;
        
    }
}




Optimal Approach:-
class Solution
{
    //Function to return a list containing the union of the two arrays.
    public static ArrayList<Integer> findUnion(int arr1[], int arr2[], int n, int m)
    {
        // add your code here
        ArrayList<Integer> al = new ArrayList<Integer>();
        
        int i=0,j=0;
    
        while(i<n&&j<m)
        {
            
            if(arr1[i]<=arr2[j])
            {
                //int g = al.size()-1;
                if(al.size()==0 || al.get(al.size()-1)!=arr1[i])
                {
                    al.add(arr1[i]);
                }
              i++;
            }
            else
            {
                //int g = al.size()-1;
                if(al.size()==0 || al.get(al.size()-1)!=arr2[j])
                {
                   al.add(arr2[j]);
                }
               j++;
            }
        }
        
        while(i<n)
        {
            if(al.get(al.size()-1)!=arr1[i])
                {
                    al.add(arr1[i]);
                }
              i++;
        }
        
        while(j<m)
        {
            if(al.get(al.size()-1)!=arr2[j])
                {
                   al.add(arr2[j]);
                }
               j++;
        }
        
        return al;
    }
}


